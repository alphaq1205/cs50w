{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/abhishek/projects/personal/harward_projects/har_test/two/iotDashboard2/frontend/src/component/main/editDevice.js\";\nimport React from \"react\";\nimport AdminLayout from \"./AdminLayout\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport { Card, InputGroup, FormControl, ThemeProvider } from \"react-bootstrap\";\nimport { fields } from '../../constants/constants';\nexport default class AddDevice extends React.Component {\n  constructor() {\n    super();\n\n    this.componentWillMount = () => {\n      let email = localStorage.getItem('email');\n      let deviceId = this.props.match.params.id;\n      let key = localStorage.getItem('key');\n\n      if (key) {\n        this.setState({\n          username: email,\n          devicId: deviceId\n        });\n      } else {\n        alert('You are not logged in');\n        this.props.history.push(\"/\");\n      }\n    };\n\n    this.componentDidMount = () => {\n      this.getFields();\n      this.getDeviceSingleData();\n    };\n\n    this.getDeviceSingleData = () => {\n      let url = 'http://127.0.0.1:8000/devices/' + this.state.devicId + '/';\n      fetch(url, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        }\n      }).then(responseJson => responseJson.json()).then(res => {\n        //  console.log(res)\n        this.setState({\n          description: res.description,\n          deviceName: res.deviceName,\n          enable: res.enable,\n          fieldNameOne: res.fieldNameOne,\n          fieldNameTwo: res.fieldNameTwo,\n          fieldNameThree: res.fieldNameThree,\n          fieldTypeOne: res.fieldTypeOne,\n          fieldTypeTwo: res.fieldTypeTwo,\n          fieldTypeThree: res.fieldTypeThree,\n          response: res.response,\n          user: res.user\n        });\n      }).catch(error => {\n        alert(\"Something went wrong please try again\");\n      });\n    };\n\n    this.getFields = () => {\n      let url2 = 'http://127.0.0.1:8000/field/  ';\n      fetch(url2, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        }\n      }).then(responseJson => responseJson.json()).then(response => {\n        this.setState({\n          fieldData: response\n        });\n      }).catch(error => {\n        alert(\"Something went wrong please try again\");\n      });\n    };\n\n    this.submit = () => {\n      let {\n        username,\n        deviceName,\n        fieldTypeOne,\n        fieldNameOne,\n        fieldTypeTwo,\n        fieldNameTwo,\n        fieldTypeThree,\n        fieldNameThree,\n        description,\n        deviceId,\n        enable,\n        response,\n        devicId\n      } = this.state;\n      this.setState({\n        loading: true\n      });\n      let url = 'http://127.0.0.1:8000/devices/' + devicId + '/';\n      fetch(url, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          user: username,\n          deviceName: deviceName,\n          fieldTypeOne: fieldTypeOne,\n          fieldNameOne: fieldNameOne,\n          fieldTypeTwo: fieldTypeTwo,\n          fieldNameTwo: fieldNameTwo,\n          fieldTypeThree: fieldTypeThree,\n          fieldNameThree: fieldNameThree,\n          description: description,\n          enable: enable,\n          response: response\n        })\n      }).then(responseJson => responseJson.json()).then(response => {\n        alert(\"Data Updated successfully\");\n      }).then(() => {\n        this.props.history.push(\"/homepage\");\n        this.setState({\n          loading: false\n        });\n      }).catch(error => {\n        alert(\"Something went wrong please try again\");\n      });\n    };\n\n    this.state = {\n      data: [],\n      token: '',\n      deviceName: '',\n      tags: '',\n      websiteAddress: '',\n      gitWebsiteAddress: '',\n      showLocation: '',\n      videoAddress: '',\n      fieldTypeOne: 2,\n      fieldNameOne: '',\n      fieldTypeTwo: 2,\n      fieldNameTwo: '',\n      fieldTypeThree: 2,\n      fieldNameThree: '',\n      description: '',\n      enable: false,\n      response: false,\n      username: '',\n      deviceId: '',\n      user: '',\n      devicId: ''\n    };\n  }\n\n  render() {\n    let {\n      deviceName,\n      fieldTypeOne,\n      fieldNameOne,\n      fieldTypeTwo,\n      fieldNameTwo,\n      fieldTypeThree,\n      fieldNameThree,\n      description,\n      enable,\n      response\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(AdminLayout, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: {\n            span: 12\n          },\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              children: \"Edit Device\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: /*#__PURE__*/_jsxDEV(Form, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"deviceName\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 152,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"text\",\n                      className: \"form-control\",\n                      placeholder: \"Device Name\",\n                      value: deviceName,\n                      onChange: e => this.setState({\n                        deviceName: e.target.value\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 153,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"1. Field Type\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 165,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      as: \"select\",\n                      value: fieldTypeOne,\n                      onChange: e => this.setState({\n                        fieldTypeOne: e.target.value\n                      }),\n                      children: fields.map(dta => {\n                        return /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: dta.value,\n                          children: dta.text\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 170,\n                          columnNumber: 31\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 166,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"1. Field Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 180,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"text\",\n                      className: \"form-control\",\n                      placeholder: \"Field Name One\",\n                      value: fieldNameOne,\n                      onChange: e => this.setState({\n                        fieldNameOne: e.target.value\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 181,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"2. Field Type\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 193,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      as: \"select\",\n                      value: fieldTypeTwo,\n                      onChange: e => this.setState({\n                        fieldTypeTwo: e.target.value\n                      }),\n                      children: fields.map(dta => {\n                        return /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: dta.value,\n                          children: dta.text\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 198,\n                          columnNumber: 31\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 194,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"2. Field Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 207,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"text\",\n                      className: \"form-control\",\n                      placeholder: \"Field Name Two\",\n                      value: fieldNameTwo,\n                      onChange: e => this.setState({\n                        fieldNameTwo: e.target.value\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 208,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"3. Field Type\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 220,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      as: \"select\",\n                      value: fieldTypeThree,\n                      onChange: e => this.setState({\n                        fieldTypeThree: e.target.value\n                      }),\n                      children: fields.map(dta => {\n                        return /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: dta.value,\n                          children: dta.text\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 225,\n                          columnNumber: 31\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 221,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"3. Field Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 234,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"text\",\n                      className: \"form-control\",\n                      placeholder: \"Field Name Three\",\n                      value: fieldNameThree,\n                      onChange: e => this.setState({\n                        fieldNameThree: e.target.value\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 235,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    controlId: \"exampleForm.ControlTextarea1\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Description\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 248,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      as: \"textarea\",\n                      rows: 3,\n                      value: description,\n                      onChange: e => this.setState({\n                        description: e.target.value\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 249,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Enable\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 253,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                      className: \"mb-3\",\n                      children: /*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n                        children: enable == true ? /*#__PURE__*/_jsxDEV(InputGroup.Checkbox, {\n                          \"aria-label\": \"Checkbox for following text input\",\n                          value: enable,\n                          onClick: e => this.setState({\n                            enable: e.target.checked\n                          }),\n                          checked: true\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 257,\n                          columnNumber: 29\n                        }, this) : /*#__PURE__*/_jsxDEV(InputGroup.Checkbox, {\n                          \"aria-label\": \"Checkbox for following text input\",\n                          value: enable,\n                          onClick: e => this.setState({\n                            enable: e.target.checked\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 257,\n                          columnNumber: 186\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 255,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 254,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Response\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 264,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                      className: \"mb-3\",\n                      children: /*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n                        children: /*#__PURE__*/_jsxDEV(InputGroup.Checkbox, {\n                          \"aria-label\": \"Checkbox for following text input\",\n                          value: response,\n                          onClick: e => this.setState({\n                            response: e.target.checked\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 267,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 266,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 265,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-right\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"primary\",\n                      type: \"button\",\n                      className: \"btn-sm\",\n                      onClick: this.submit,\n                      disabled: this.state.loading,\n                      children: [this.state.loading && /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"spinner-border spinner-border-sm\",\n                        role: \"status\",\n                        \"aria-hidden\": \"true\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 282,\n                        columnNumber: 27\n                      }, this), this.state.loading && /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: \" Updating device data...\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 289,\n                        columnNumber: 27\n                      }, this), !this.state.loading && /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: \" Update\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 291,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 274,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/abhishek/projects/personal/harward_projects/har_test/two/iotDashboard2/frontend/src/component/main/editDevice.js"],"names":["React","AdminLayout","Form","Row","Col","Button","Card","InputGroup","FormControl","ThemeProvider","fields","AddDevice","Component","constructor","componentWillMount","email","localStorage","getItem","deviceId","props","match","params","id","key","setState","username","devicId","alert","history","push","componentDidMount","getFields","getDeviceSingleData","url","state","fetch","headers","Accept","then","responseJson","json","res","description","deviceName","enable","fieldNameOne","fieldNameTwo","fieldNameThree","fieldTypeOne","fieldTypeTwo","fieldTypeThree","response","user","catch","error","url2","fieldData","submit","loading","method","body","JSON","stringify","data","token","tags","websiteAddress","gitWebsiteAddress","showLocation","videoAddress","render","span","e","target","value","map","dta","text","checked"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport AdminLayout from \"./AdminLayout\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport { Card, InputGroup, FormControl, ThemeProvider } from \"react-bootstrap\";\nimport { fields } from '../../constants/constants'\n\nexport default class AddDevice extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      data: [],\n      token: '',\n      deviceName: '',\n      tags: '',\n      websiteAddress: '',\n      gitWebsiteAddress: '',\n      showLocation: '',\n      videoAddress: '',\n      fieldTypeOne: 2,\n      fieldNameOne: '',\n      fieldTypeTwo: 2,\n      fieldNameTwo: '',\n      fieldTypeThree: 2,\n      fieldNameThree: '',\n      description: '',\n      enable: false,\n      response: false,\n      username: '',\n      deviceId: '',\n      user: '',\n      devicId: ''\n    };\n  }\n\n  componentWillMount = () => {\n    let email = localStorage.getItem('email')\n    let deviceId = this.props.match.params.id;\n    let key = localStorage.getItem('key')\n    if (key) {\n      this.setState({ username: email, devicId: deviceId })\n    } else {\n      alert('You are not logged in')\n      this.props.history.push(\"/\")\n    }\n  }\n\n  componentDidMount = () => {\n    this.getFields()\n    this.getDeviceSingleData()\n  }\n\n  getDeviceSingleData = () => {\n    let url = 'http://127.0.0.1:8000/devices/' + this.state.devicId + '/'\n    fetch(url, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      }\n    })\n      .then((responseJson) => responseJson.json())\n      .then((res) => {\n      //  console.log(res)\n        this.setState({\n          description: res.description,\n          deviceName: res.deviceName,\n          enable: res.enable,\n          fieldNameOne: res.fieldNameOne,\n          fieldNameTwo: res.fieldNameTwo,\n          fieldNameThree: res.fieldNameThree,\n          fieldTypeOne: res.fieldTypeOne,\n          fieldTypeTwo: res.fieldTypeTwo,\n          fieldTypeThree: res.fieldTypeThree,\n          response: res.response,\n          user: res.user\n        })\n      })\n      .catch((error) => {\n        alert(\"Something went wrong please try again\");\n      })\n  }\n\n  getFields = () => {\n    let url2 = 'http://127.0.0.1:8000/field/  '\n    fetch(url2, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      }\n    })\n      .then((responseJson) => responseJson.json())\n      .then((response) => {\n        this.setState({ fieldData: response })\n      })\n      .catch((error) => {\n        alert(\"Something went wrong please try again\");\n      })\n  }\n\n  submit = () => {\n    let { username, deviceName, fieldTypeOne, fieldNameOne, fieldTypeTwo, fieldNameTwo, fieldTypeThree, fieldNameThree, description, deviceId, enable, response, devicId } = this.state\n    this.setState({ loading: true });\n    let url = 'http://127.0.0.1:8000/devices/' + devicId + '/'\n    fetch(url, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        user: username,\n        deviceName: deviceName,\n        fieldTypeOne: fieldTypeOne,\n        fieldNameOne: fieldNameOne,\n        fieldTypeTwo: fieldTypeTwo,\n        fieldNameTwo: fieldNameTwo,\n        fieldTypeThree: fieldTypeThree,\n        fieldNameThree: fieldNameThree,\n        description: description,\n        enable: enable,\n        response: response\n      }),\n    })\n      .then((responseJson) => responseJson.json())\n      .then((response) => {\n        alert(\"Data Updated successfully\");\n      }).then(() => {\n        this.props.history.push(\"/homepage\");\n        this.setState({ loading: false });\n      })\n      .catch((error) => {\n        alert(\"Something went wrong please try again\");\n      });\n  };\n\n  render() {\n\n    let { deviceName, fieldTypeOne, fieldNameOne, fieldTypeTwo, fieldNameTwo, fieldTypeThree, fieldNameThree, description, enable, response } = this.state\n\n    return (\n      <AdminLayout>\n        <Row>\n          <Col md={{ span: 12 }}>\n            <Card>\n              <Card.Header>Edit Device</Card.Header>\n              <Card.Body>\n                <Card.Text>\n                  <Form>\n                    <Form.Group>\n                      <Form.Label>deviceName</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Device Name\"\n                        value={deviceName}\n                        onChange={(e) =>\n                          this.setState({ deviceName: e.target.value })\n                        }\n                      />\n                    </Form.Group>\n\n                    <Form.Group>\n                      <Form.Label>1. Field Type</Form.Label>\n                      <Form.Control as=\"select\" value={fieldTypeOne} onChange={(e) => this.setState({ fieldTypeOne: e.target.value })}>\n                        {\n                          fields.map((dta) => {\n                            return (\n                              <option value={dta.value}>{dta.text}</option>\n                            )\n                          })\n\n                        }\n                      </Form.Control>\n\n                    </Form.Group>\n\n                    <Form.Group>\n                      <Form.Label>1. Field Name</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Field Name One\"\n                        value={fieldNameOne}\n                        onChange={(e) =>\n                          this.setState({ fieldNameOne: e.target.value })\n                        }\n                      />\n                    </Form.Group>\n\n                    <Form.Group>\n                      <Form.Label>2. Field Type</Form.Label>\n                      <Form.Control as=\"select\" value={fieldTypeTwo} onChange={(e) => this.setState({ fieldTypeTwo: e.target.value })}>\n                        {\n                          fields.map((dta) => {\n                            return (\n                              <option value={dta.value}>{dta.text}</option>\n                            )\n                          })\n\n                        }</Form.Control>\n\n                    </Form.Group>\n\n                    <Form.Group>\n                      <Form.Label>2. Field Name</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Field Name Two\"\n                        value={fieldNameTwo}\n                        onChange={(e) =>\n                          this.setState({ fieldNameTwo: e.target.value })\n                        }\n                      />\n                    </Form.Group>\n\n                    <Form.Group>\n                      <Form.Label>3. Field Type</Form.Label>\n                      <Form.Control as=\"select\" value={fieldTypeThree} onChange={(e) => this.setState({ fieldTypeThree: e.target.value })}>\n                        {\n                          fields.map((dta) => {\n                            return (\n                              <option value={dta.value}>{dta.text}</option>\n                            )\n                          })\n\n                        }</Form.Control>\n\n                    </Form.Group>\n\n                    <Form.Group>\n                      <Form.Label>3. Field Name</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Field Name Three\"\n                        value={fieldNameThree}\n                        onChange={(e) =>\n                          this.setState({ fieldNameThree: e.target.value })\n                        }\n                      />\n                    </Form.Group>\n\n\n                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                      <Form.Label>Description</Form.Label>\n                      <Form.Control as=\"textarea\" rows={3} value={description} onChange={(e) => this.setState({ description: e.target.value })} />\n                    </Form.Group>\n\n                    <Form.Group>\n                      <Form.Label>Enable</Form.Label>\n                      <InputGroup className=\"mb-3\">\n                        <InputGroup.Prepend>\n                          {enable == true ?\n                            <InputGroup.Checkbox aria-label=\"Checkbox for following text input\" value={enable} onClick={(e) => this.setState({ enable: e.target.checked })} checked /> : <InputGroup.Checkbox aria-label=\"Checkbox for following text input\" value={enable} onClick={(e) => this.setState({ enable: e.target.checked })} />\n                          }\n                        </InputGroup.Prepend>\n                      </InputGroup>\n                    </Form.Group>\n\n                    <Form.Group>\n                      <Form.Label>Response</Form.Label>\n                      <InputGroup className=\"mb-3\">\n                        <InputGroup.Prepend>\n                          <InputGroup.Checkbox aria-label=\"Checkbox for following text input\" value={response} onClick={(e) => this.setState({ response: e.target.checked })} />\n                        </InputGroup.Prepend>\n                      </InputGroup>\n                    </Form.Group>\n\n\n                    <div className=\"text-right\">\n                      <Button\n                        variant=\"primary\"\n                        type=\"button\"\n                        className=\"btn-sm\"\n                        onClick={this.submit}\n                        disabled={this.state.loading}\n                      >\n                        {this.state.loading && (\n                          <span\n                            className=\"spinner-border spinner-border-sm\"\n                            role=\"status\"\n                            aria-hidden=\"true\"\n                          ></span>\n                        )}\n                        {this.state.loading && (\n                          <span> Updating device data...</span>\n                        )}\n                        {!this.state.loading && <span> Update</span>}\n                      </Button>\n                    </div>\n                  </Form>\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </AdminLayout>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}