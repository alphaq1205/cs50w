{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/abhishek/projects/personal/harward_projects/har_test/two/iotDashboard2/frontend/src/component/main/singleDeviceData.js\";\nimport React from \"react\";\nimport AdminLayout from \"./AdminLayout\";\nimport { Link } from \"react-router-dom\";\nimport Header from \"../common/header\";\nimport { Table, DropdownButton, Dropdown, DropdownType } from \"react-bootstrap\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { withRouter } from \"react-router-dom\"; //import ReactHTMLTableToExcel from 'react-html-table-to-excel';\n\nclass Homepage extends React.Component {\n  constructor() {\n    super();\n\n    this.componentWillMount = () => {\n      let email = localStorage.getItem('email');\n      let key = localStorage.getItem('key');\n      let device_id = this.props.match.params.id;\n\n      if (key) {\n        this.setState({\n          username: email,\n          deviceId: device_id\n        });\n      } else {\n        alert('You are not logged in');\n        this.props.history.push(\"/\");\n      }\n    };\n\n    this.componentDidMount = () => {\n      this.getDeviceDetial();\n      setInterval(() => {\n        this.getDeviceData();\n      }, 1000);\n    };\n\n    this.getDeviceData = () => {\n      let url = 'http://127.0.0.1:8000/deviceData/';\n      fetch(url, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        }\n      }).then(responseJson => responseJson.json()).then(response => {\n        this.setState({\n          DeviceData: response\n        });\n      }).catch(error => {\n        alert(\"Something went wrong please try again\");\n      });\n    };\n\n    this.getDeviceDetial = () => {\n      let url = 'http://127.0.0.1:8000/devices/';\n      fetch(url, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        }\n      }).then(responseJson => responseJson.json()).then(response => {\n        this.setState({\n          data: response\n        });\n      }).catch(error => {\n        console.log(error);\n        alert(\"Something went wrong please try again\");\n      });\n    };\n\n    this.state = {\n      data: [],\n      token: \"\",\n      loading: false,\n      stillLogin: false,\n      username: '',\n      deviceId: 12,\n      DeviceData: []\n    };\n  }\n\n  render() {\n    let {\n      data,\n      DeviceData,\n      username,\n      deviceId\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(AdminLayout, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: {\n            span: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Dashboards\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            striped: true,\n            bordered: true,\n            hover: true,\n            size: \"sm\",\n            responsive: \"sm\",\n            id: \"table-to-xls\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  scope: \"col\",\n                  children: \"ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  scope: \"col\",\n                  children: \"Device ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  scope: \"col\",\n                  children: \"Field 1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  scope: \"col\",\n                  children: \"Field 2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  scope: \"col\",\n                  children: \"Field 3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  scope: \"col\",\n                  children: \"Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  scope: \"col\",\n                  children: \"Remote IP\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: DeviceData.reverse().map(dat => {\n                if (dat.username == username && dat.deviceID == deviceId) {\n                  return /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: dat.id\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 117,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: dat.deviceID\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 118,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: dat.fieldDataOne\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 120,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: dat.fieldDataTwo\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 121,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: dat.fieldDataThree\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 122,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: dat.date\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 123,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: dat.remoteIP\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 124,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 23\n                  }, this);\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(Homepage);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/abhishek/projects/personal/harward_projects/har_test/two/iotDashboard2/frontend/src/component/main/singleDeviceData.js"],"names":["React","AdminLayout","Link","Header","Table","DropdownButton","Dropdown","DropdownType","Button","Row","Col","withRouter","Homepage","Component","constructor","componentWillMount","email","localStorage","getItem","key","device_id","props","match","params","id","setState","username","deviceId","alert","history","push","componentDidMount","getDeviceDetial","setInterval","getDeviceData","url","fetch","headers","Accept","then","responseJson","json","response","DeviceData","catch","error","data","console","log","state","token","loading","stillLogin","render","span","reverse","map","dat","deviceID","fieldDataOne","fieldDataTwo","fieldDataThree","date","remoteIP"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport AdminLayout from \"./AdminLayout\";\nimport { Link } from \"react-router-dom\";\nimport Header from \"../common/header\";\nimport { Table, DropdownButton, Dropdown, DropdownType } from \"react-bootstrap\"\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { withRouter } from \"react-router-dom\";\n\n//import ReactHTMLTableToExcel from 'react-html-table-to-excel';\n\nclass Homepage extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      data: [],\n      token: \"\",\n      loading: false,\n      stillLogin: false,\n      username: '',\n      deviceId: 12,\n      DeviceData: [],\n    }\n  }\n\n\n\n\n  componentWillMount = () => {\n    let email = localStorage.getItem('email')\n    let key = localStorage.getItem('key')\n    let device_id = this.props.match.params.id;\n    if (key) {\n      this.setState({ username: email, deviceId: device_id })\n    } else {\n      alert('You are not logged in')\n      this.props.history.push(\"/\")\n    }\n  }\n\n  componentDidMount = () => {\n    this.getDeviceDetial()\n    setInterval(()=>{\n      this.getDeviceData()\n    },1000)\n  }\n\n  getDeviceData = () => {\n    let url = 'http://127.0.0.1:8000/deviceData/'\n    fetch(url, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      }\n    })\n      .then((responseJson) => responseJson.json())\n      .then((response) => {\n        this.setState({ DeviceData: response })\n      })\n      .catch((error) => {\n        alert(\"Something went wrong please try again\");\n      })\n  }\n\n  getDeviceDetial = () => {\n    let url = 'http://127.0.0.1:8000/devices/'\n    fetch(url, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      }\n    })\n      .then((responseJson) => responseJson.json())\n      .then((response) => {\n        this.setState({ data: response })\n      })\n      .catch((error) => {\n        console.log(error)\n        alert(\"Something went wrong please try again\");\n      })\n  }\n\n  render() {\n    let { data, DeviceData, username, deviceId } = this.state\n    return (\n      <AdminLayout>\n        <Row>\n          <Col md={{ span: 2 }}>\n            <h2>Dashboards</h2>\n\n          </Col>\n          <Col>\n            <Header />\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Table striped bordered hover size=\"sm\" responsive=\"sm\" id=\"table-to-xls\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">ID</th>\n                  <th scope=\"col\">Device ID</th>\n                  {/* <th scope=\"col\">Device</th> */}\n                  <th scope=\"col\">Field 1</th>\n                  <th scope=\"col\">Field 2</th>\n                  <th scope=\"col\">Field 3</th>\n                  <th scope=\"col\">Date</th>\n                  <th scope=\"col\">Remote IP</th>\n                </tr>\n              </thead>\n              <tbody>\n                {DeviceData.reverse().map((dat) => {\n                  if (dat.username == username && dat.deviceID == deviceId) {\n                    return (\n                      <tr >\n                        <td>{dat.id}</td>\n                        <td>{dat.deviceID}</td>\n                        {/* <td>{dat.deviceID}</td> */}\n                        <td>{dat.fieldDataOne}</td>\n                        <td>{dat.fieldDataTwo}</td>\n                        <td>{dat.fieldDataThree}</td>\n                        <td>{dat.date}</td>\n                        <td>{dat.remoteIP}</td>\n                      </tr>\n                    )\n                  }\n\n                })\n                }\n              </tbody>\n            </Table>\n          </Col>\n        </Row>\n      </AdminLayout>\n    );\n  }\n}\n\nexport default withRouter(Homepage)"]},"metadata":{},"sourceType":"module"}