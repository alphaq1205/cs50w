{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/abhishek/projects/personal/harward_projects/har_test/two/iotDashboard2/frontend/src/component/auth/registration.js\";\nimport React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Card from \"react-bootstrap/Card\";\nimport Form from \"react-bootstrap/Form\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\n\nclass Registration extends React.Component {\n  constructor() {\n    super();\n\n    this.submit = () => {\n      this.setState({\n        loading: true\n      });\n      let {\n        email,\n        name,\n        password,\n        password2\n      } = this.state;\n      /* console.log(email)\n      console.log(password)\n      console.log(name)\n      console.log(password2)\n      */\n\n      let formData = new FormData();\n      formData.append('username', email);\n      formData.append('email', email);\n      formData.append('password', password);\n      formData.append('password2', password2);\n      console.log(formData);\n      const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n      let url = 'http://127.0.0.1:8000/register';\n      fetch(url, {\n        method: \"POST\",\n        body: formData\n      }).then(responseJson => responseJson.json()).then(response => {\n        alert(response.message);\n\n        if (response.status == 'true') {\n          this.setState({\n            registerStatus: true\n          });\n        }\n      }).then(() => {\n        if (this.state.registerStatus) {\n          this.props.history.push(\"/login\");\n        }\n\n        this.setState({\n          loading: false\n        });\n      }).catch(error => {\n        alert(\"Something went wrong please try again\");\n      });\n    };\n\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      password2: '',\n      registerStatus: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"my-sm-5 my-2\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: {\n            span: 4,\n            offset: 4\n          },\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              as: \"h1\",\n              children: [\"Register\", /*#__PURE__*/_jsxDEV(Card.Title, {\n                className: \"text-muted mt-1\",\n                children: \"IOT Dashboard\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Full Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    placeholder: \"Enter full name\",\n                    value: this.state.name,\n                    onChange: e => this.setState({\n                      name: e.target.value\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"email\",\n                    placeholder: \"Enter email\",\n                    value: this.state.email,\n                    onChange: e => this.setState({\n                      email: e.target.value\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"password\",\n                    placeholder: \"Enter password\",\n                    value: this.state.password,\n                    onChange: e => this.setState({\n                      password: e.target.value\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Confirm Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"password\",\n                    placeholder: \"Re-Enter password\",\n                    value: this.state.password2,\n                    onChange: e => this.setState({\n                      password2: e.target.value\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  variant: \"primary\",\n                  block: true,\n                  onClick: this.submit,\n                  disabled: this.state.loading,\n                  children: [this.state.loading && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"spinner-border spinner-border-sm\",\n                    role: \"status\",\n                    \"aria-hidden\": \"true\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 23\n                  }, this), this.state.loading && /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \" Creating Account\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 44\n                  }, this), !this.state.loading && /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \" CREATE ACCOUNT\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n              className: \"text-muted text-center\",\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: \"/\",\n                    children: \"Home\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 144,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  className: \"text-sm-right\",\n                  sm: {\n                    span: 8\n                  },\n                  children: [\"Already registered?\", /*#__PURE__*/_jsxDEV(Link, {\n                    to: \"/login\",\n                    id: \"custom-link\",\n                    children: [\" \", \"Login\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(Registration);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/abhishek/projects/personal/harward_projects/har_test/two/iotDashboard2/frontend/src/component/auth/registration.js"],"names":["React","Link","withRouter","Card","Form","Container","Row","Col","Button","Registration","Component","constructor","submit","setState","loading","email","name","password","password2","state","formData","FormData","append","console","log","proxyurl","url","fetch","method","body","then","responseJson","json","response","alert","message","status","registerStatus","props","history","push","catch","error","render","span","offset","e","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Card from \"react-bootstrap/Card\";\nimport Form from \"react-bootstrap/Form\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\n\n class Registration extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      password2:'',\n      registerStatus:false\n    };\n  }\n\n  submit = () => {\n    this.setState({ loading: true });\n    \n    let {email, name, password, password2} = this.state\n    /* console.log(email)\n    console.log(password)\n    console.log(name)\n    console.log(password2)\n */\n    let formData = new FormData();\n    formData.append('username', email)\n    formData.append('email',email)\n    formData.append('password', password)\n    formData.append('password2',password2)\n\n    console.log(formData)\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\"\n    \n    let url = 'http://127.0.0.1:8000/register'\n    fetch(url, {\n      method: \"POST\",\n      \n      body:formData \n    })\n      .then((responseJson) => responseJson.json())\n      .then((response) => {\n        alert(response.message)\n        if(response.status == 'true'){\n          this.setState({registerStatus:true})\n        }\n      })\n      .then(() => {\n        if(this.state.registerStatus){\n          this.props.history.push(\"/login\")\n        }\n        this.setState({ loading: false });\n      })\n      .catch((error) => {\n        alert(\"Something went wrong please try again\");\n      });\n  };\n\n  render() {\n    return (\n      <Container className=\"my-sm-5 my-2\">\n        <Row>\n          <Col md={{ span: 4, offset: 4 }}>\n            <Card>\n              <Card.Header as=\"h1\">\n                Register\n                <Card.Title className=\"text-muted mt-1\">\n                  IOT Dashboard\n                </Card.Title>\n              </Card.Header>\n              <Card.Body>\n                <Card.Text>\n                  <Form.Group>\n                    <Form.Label>Full Name</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      placeholder=\"Enter full name\"\n                      value={this.state.name}\n                      onChange={(e) => this.setState({ name: e.target.value })}\n                    />\n                  </Form.Group>\n\n                  <Form.Group>\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control\n                      type=\"email\"\n                      placeholder=\"Enter email\"\n                      value={this.state.email}\n                      onChange={(e) => this.setState({ email: e.target.value })}\n                    />\n                  </Form.Group>\n\n                  <Form.Group>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                      type=\"password\"\n                      placeholder=\"Enter password\"\n                      value={this.state.password}\n                      onChange={(e) =>\n                        this.setState({ password: e.target.value })\n                      }\n                    />\n                  </Form.Group>\n\n                  <Form.Group>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                      type=\"password\"\n                      placeholder=\"Re-Enter password\"\n                      value={this.state.password2}\n                      onChange={(e) =>\n                        this.setState({ password2: e.target.value })\n                      }\n                    />\n                  </Form.Group>\n\n                  <Button\n                    type=\"submit\"\n                    variant=\"primary\"\n                    block\n                    onClick={this.submit}\n                    disabled={this.state.loading}\n                  >\n                    {this.state.loading && (\n                      <span\n                        className=\"spinner-border spinner-border-sm\"\n                        role=\"status\"\n                        aria-hidden=\"true\"\n                      ></span>\n                    )}\n                    {this.state.loading && <span> Creating Account</span>}\n                    {!this.state.loading && <span> CREATE ACCOUNT</span>}\n                  </Button>\n                </Card.Text>\n              </Card.Body>\n              <Card.Footer className=\"text-muted text-center\">\n                <Row>\n                  <Col>\n                    <Link to=\"/\">Home</Link>\n                  </Col>\n                  <Col className=\"text-sm-right\" sm={{ span: 8 }}>\n                    Already registered?\n                    <Link to=\"/login\" id=\"custom-link\">\n                      {\" \"}\n                      Login\n                    </Link>\n                  </Col>\n                </Row>\n              </Card.Footer>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\n\nexport default withRouter(Registration)"]},"metadata":{},"sourceType":"module"}