{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/abhishek/projects/personal/harward_projects/har_test/two/iotDashboard2/frontend/src/component/main/createDevice.js\";\nimport React from \"react\";\nimport AdminLayout from \"./AdminLayout\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport { Card, InputGroup, FormControl, ThemeProvider } from \"react-bootstrap\";\nimport { fields } from '../../constants/constants';\nexport default class AddDevice extends React.Component {\n  constructor() {\n    super();\n\n    this.componentWillMount = () => {\n      let email = localStorage.getItem('email');\n      let key = localStorage.getItem('key');\n\n      if (key) {\n        this.setState({\n          username: email\n        });\n      } else {\n        alert('You are not logged in');\n        this.props.history.push(\"/\");\n      }\n    };\n\n    this.submit = () => {\n      let {\n        username,\n        deviceName,\n        fieldTypeOne,\n        fieldNameOne,\n        fieldTypeTwo,\n        fieldNameTwo,\n        fieldTypeThree,\n        fieldNameThree,\n        description,\n        enable,\n        response\n      } = this.state;\n      this.setState({\n        loading: true\n      });\n      let url = 'http://127.0.0.1:8000/devices/';\n      fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          user: username,\n          deviceName: deviceName,\n          fieldTypeOne: fieldTypeOne,\n          fieldNameOne: fieldNameOne,\n          fieldTypeTwo: fieldTypeTwo,\n          fieldNameTwo: fieldNameTwo,\n          fieldTypeThree: fieldTypeThree,\n          fieldNameThree: fieldNameThree,\n          description: description,\n          enable: enable,\n          response: response\n        })\n      }).then(responseJson => responseJson.json()).then(response => {\n        alert('Data created successfully');\n      }).then(() => {\n        this.props.history.push(\"/homepage\");\n        this.setState({\n          loading: false\n        });\n      }).catch(error => {\n        alert(\"Something went wrong please try again\");\n      });\n    };\n\n    this.state = {\n      data: [],\n      token: '',\n      deviceName: '',\n      tags: '',\n      websiteAddress: '',\n      gitWebsiteAddress: '',\n      showLocation: '',\n      videoAddress: '',\n      fieldTypeOne: '',\n      fieldNameOne: '',\n      fieldTypeTwo: '',\n      fieldNameTwo: '',\n      fieldTypeThree: '',\n      fieldNameThree: '',\n      description: '',\n      enable: false,\n      response: false\n    };\n  }\n\n  render() {\n    let {\n      deviceName,\n      fieldTypeOne,\n      fieldNameOne,\n      fieldTypeTwo,\n      fieldNameTwo,\n      fieldTypeThree,\n      fieldNameThree,\n      description,\n      enable,\n      response\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(AdminLayout, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: {\n            span: 12\n          },\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              children: \"Add Device\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: /*#__PURE__*/_jsxDEV(Form, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"deviceName\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 95,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"text\",\n                      className: \"form-control\",\n                      placeholder: \"Device Name\",\n                      value: deviceName,\n                      onChange: e => this.setState({\n                        deviceName: e.target.value\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 96,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"1. Field Type\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 108,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      as: \"select\",\n                      value: fieldTypeOne,\n                      onChange: e => this.setState({\n                        fieldTypeOne: e.target.value\n                      }),\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"0\",\n                        children: \"Select Flield\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 110,\n                        columnNumber: 25\n                      }, this), fields.map(dta => {\n                        return /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: dta.value,\n                          children: dta.text\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 114,\n                          columnNumber: 31\n                        }, this);\n                      })]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 109,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"1. Field Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 124,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"text\",\n                      className: \"form-control\",\n                      placeholder: \"Git Website Address\",\n                      value: fieldNameOne,\n                      onChange: e => this.setState({\n                        fieldNameOne: e.target.value\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 125,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"2. Field Type\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 137,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      as: \"select\",\n                      value: fieldTypeTwo,\n                      onChange: e => this.setState({\n                        fieldTypeTwo: e.target.value\n                      }),\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"0\",\n                        children: \"Select Flield\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 139,\n                        columnNumber: 25\n                      }, this), fields.map(dta => {\n                        return /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: dta.value,\n                          children: dta.text\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 143,\n                          columnNumber: 31\n                        }, this);\n                      })]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 138,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"2. Field Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 152,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"text\",\n                      className: \"form-control\",\n                      placeholder: \"Git Website Address\",\n                      value: fieldNameTwo,\n                      onChange: e => this.setState({\n                        fieldNameTwo: e.target.value\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 153,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"3. Field Type\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 165,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      as: \"select\",\n                      value: fieldTypeThree,\n                      onChange: e => this.setState({\n                        fieldTypeThree: e.target.value\n                      }),\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"0\",\n                        children: \"Select Flield\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 167,\n                        columnNumber: 25\n                      }, this), fields.map(dta => {\n                        return /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: dta.value,\n                          children: dta.text\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 171,\n                          columnNumber: 31\n                        }, this);\n                      })]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 166,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"3. Field Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 180,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"text\",\n                      className: \"form-control\",\n                      placeholder: \"Git Website Address\",\n                      value: fieldNameThree,\n                      onChange: e => this.setState({\n                        fieldNameThree: e.target.value\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 181,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    controlId: \"exampleForm.ControlTextarea1\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Description\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 194,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      as: \"textarea\",\n                      rows: 3,\n                      value: description,\n                      onChange: e => this.setState({\n                        description: e.target.value\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 195,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Enable\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 199,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                      className: \"mb-3\",\n                      children: /*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n                        children: /*#__PURE__*/_jsxDEV(InputGroup.Checkbox, {\n                          \"aria-label\": \"Checkbox for following text input\",\n                          value: enable,\n                          onClick: e => this.setState({\n                            enable: e.target.checked\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 202,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 201,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 200,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Response\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 208,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                      className: \"mb-3\",\n                      children: /*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n                        children: /*#__PURE__*/_jsxDEV(InputGroup.Checkbox, {\n                          \"aria-label\": \"Checkbox for following text input\",\n                          value: response,\n                          onClick: e => this.setState({\n                            response: e.target.checked\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 211,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 210,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 209,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-right\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"primary\",\n                      type: \"button\",\n                      className: \"btn-sm\",\n                      onClick: this.submit,\n                      disabled: this.state.loading,\n                      children: [this.state.loading && /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"spinner-border spinner-border-sm\",\n                        role: \"status\",\n                        \"aria-hidden\": \"true\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 226,\n                        columnNumber: 27\n                      }, this), this.state.loading && /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: \" Creating New Device\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 233,\n                        columnNumber: 27\n                      }, this), !this.state.loading && /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: \" Create Device\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 235,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 218,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/abhishek/projects/personal/harward_projects/har_test/two/iotDashboard2/frontend/src/component/main/createDevice.js"],"names":["React","AdminLayout","Form","Row","Col","Button","Card","InputGroup","FormControl","ThemeProvider","fields","AddDevice","Component","constructor","componentWillMount","email","localStorage","getItem","key","setState","username","alert","props","history","push","submit","deviceName","fieldTypeOne","fieldNameOne","fieldTypeTwo","fieldNameTwo","fieldTypeThree","fieldNameThree","description","enable","response","state","loading","url","fetch","method","headers","Accept","body","JSON","stringify","user","then","responseJson","json","catch","error","data","token","tags","websiteAddress","gitWebsiteAddress","showLocation","videoAddress","render","span","e","target","value","map","dta","text","checked"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport AdminLayout from \"./AdminLayout\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport { Card, InputGroup, FormControl, ThemeProvider } from \"react-bootstrap\";\nimport { fields } from '../../constants/constants'\nexport default class AddDevice extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      data: [],\n      token: '',\n      deviceName: '',\n      tags: '',\n      websiteAddress: '',\n      gitWebsiteAddress: '',\n      showLocation: '',\n      videoAddress: '',\n      fieldTypeOne: '',\n      fieldNameOne: '',\n      fieldTypeTwo: '',\n      fieldNameTwo: '',\n      fieldTypeThree: '',\n      fieldNameThree: '',\n      description: '',\n      enable: false,\n      response: false\n    };\n  }\n\n  componentWillMount = () => {\n    let email = localStorage.getItem('email')\n    let key = localStorage.getItem('key')\n    if (key) {\n      this.setState({ username: email })\n    } else {\n      alert('You are not logged in')\n      this.props.history.push(\"/\")\n    }\n  };\n\n  submit = () => {\n    let { username, deviceName, fieldTypeOne, fieldNameOne, fieldTypeTwo, fieldNameTwo, fieldTypeThree, fieldNameThree, description, enable, response } = this.state\n\n    this.setState({ loading: true });\n    let url = 'http://127.0.0.1:8000/devices/'\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        user: username,\n        deviceName: deviceName,\n        fieldTypeOne: fieldTypeOne,\n        fieldNameOne: fieldNameOne,\n        fieldTypeTwo: fieldTypeTwo,\n        fieldNameTwo: fieldNameTwo,\n        fieldTypeThree: fieldTypeThree,\n        fieldNameThree: fieldNameThree,\n        description: description,\n        enable: enable,\n        response: response\n      }),\n    })\n      .then((responseJson) => responseJson.json())\n      .then((response) => {\n        alert('Data created successfully')\n      }).then(() => {\n        this.props.history.push(\"/homepage\")\n        this.setState({ loading: false })\n      })\n      .catch((error) => {\n        alert(\"Something went wrong please try again\")\n      })\n  }\n\n  render() {\n\n    let { deviceName, fieldTypeOne, fieldNameOne, fieldTypeTwo, fieldNameTwo, fieldTypeThree, fieldNameThree, description, enable, response } = this.state\n\n    return (\n      <AdminLayout>\n        <Row>\n          <Col md={{ span: 12 }}>\n            <Card>\n              <Card.Header>Add Device</Card.Header>\n              <Card.Body>\n                <Card.Text>\n                  <Form>\n                    <Form.Group>\n                      <Form.Label>deviceName</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Device Name\"\n                        value={deviceName}\n                        onChange={(e) =>\n                          this.setState({ deviceName: e.target.value })\n                        }\n                      />\n                    </Form.Group>\n\n                    <Form.Group>\n                      <Form.Label>1. Field Type</Form.Label>\n                      <Form.Control as=\"select\" value={fieldTypeOne} onChange={(e) => this.setState({ fieldTypeOne: e.target.value })}>\n                        <option value='0'>Select Flield</option>\n                        {\n                          fields.map((dta) => {\n                            return (\n                              <option value={dta.value}>{dta.text}</option>\n                            )\n                          })\n\n                        }\n                      </Form.Control>\n\n                    </Form.Group>\n\n                    <Form.Group>\n                      <Form.Label>1. Field Name</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Git Website Address\"\n                        value={fieldNameOne}\n                        onChange={(e) =>\n                          this.setState({ fieldNameOne: e.target.value })\n                        }\n                      />\n                    </Form.Group>\n\n                    <Form.Group>\n                      <Form.Label>2. Field Type</Form.Label>\n                      <Form.Control as=\"select\" value={fieldTypeTwo} onChange={(e) => this.setState({ fieldTypeTwo: e.target.value })}>\n                        <option value='0'>Select Flield</option>\n                        {\n                          fields.map((dta) => {\n                            return (\n                              <option value={dta.value}>{dta.text}</option>\n                            )\n                          })\n                        }\n                      </Form.Control>\n\n                    </Form.Group>\n\n                    <Form.Group>\n                      <Form.Label>2. Field Name</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Git Website Address\"\n                        value={fieldNameTwo}\n                        onChange={(e) =>\n                          this.setState({ fieldNameTwo: e.target.value })\n                        }\n                      />\n                    </Form.Group>\n\n                    <Form.Group>\n                      <Form.Label>3. Field Type</Form.Label>\n                      <Form.Control as=\"select\" value={fieldTypeThree} onChange={(e) => this.setState({ fieldTypeThree: e.target.value })}>\n                        <option value='0'>Select Flield</option>\n                        {\n                          fields.map((dta) => {\n                            return (\n                              <option value={dta.value}>{dta.text}</option>\n                            )\n                          })\n                        }\n                      </Form.Control>\n\n                    </Form.Group>\n\n                    <Form.Group>\n                      <Form.Label>3. Field Name</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Git Website Address\"\n                        value={fieldNameThree}\n                        onChange={(e) =>\n                          this.setState({ fieldNameThree: e.target.value })\n                        }\n                      />\n                    </Form.Group>\n\n\n                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                      <Form.Label>Description</Form.Label>\n                      <Form.Control as=\"textarea\" rows={3} value={description} onChange={(e) => this.setState({ description: e.target.value })} />\n                    </Form.Group>\n\n                    <Form.Group>\n                      <Form.Label>Enable</Form.Label>\n                      <InputGroup className=\"mb-3\">\n                        <InputGroup.Prepend>\n                          <InputGroup.Checkbox aria-label=\"Checkbox for following text input\" value={enable} onClick={(e) => this.setState({ enable: e.target.checked })} />\n                        </InputGroup.Prepend>\n                      </InputGroup>\n                    </Form.Group>\n\n                    <Form.Group>\n                      <Form.Label>Response</Form.Label>\n                      <InputGroup className=\"mb-3\">\n                        <InputGroup.Prepend>\n                          <InputGroup.Checkbox aria-label=\"Checkbox for following text input\" value={response} onClick={(e) => this.setState({ response: e.target.checked })} />\n                        </InputGroup.Prepend>\n                      </InputGroup>\n                    </Form.Group>\n\n\n                    <div className=\"text-right\">\n                      <Button\n                        variant=\"primary\"\n                        type=\"button\"\n                        className=\"btn-sm\"\n                        onClick={this.submit}\n                        disabled={this.state.loading}\n                      >\n                        {this.state.loading && (\n                          <span\n                            className=\"spinner-border spinner-border-sm\"\n                            role=\"status\"\n                            aria-hidden=\"true\"\n                          ></span>\n                        )}\n                        {this.state.loading && (\n                          <span> Creating New Device</span>\n                        )}\n                        {!this.state.loading && <span> Create Device</span>}\n                      </Button>\n                    </div>\n                  </Form>\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </AdminLayout>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}